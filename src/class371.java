/**
 371. 两整数之和
    给你两个整数 a 和 b ，不使用 运算符 + 和 -，计算并返回两整数之和。

 思路：位运算，a和b的和，如果没有进位，就是a^b异或。
        进位的算法是，a&b然后左移一位，就是只有1和1与的时候有进位，且进位是在更高一位
        所以要在a^b上加上进位(a & b) << 1，但是这两个数的相加同样可能出现进位，
        所以要在每次计算 ^前，再计算是否有进位，如果有进位还是一样的循环进去，直到进位等于0
        因为只有在没有进位的时候，异或的结果才和加相等。

        0ms 100%
 */
public class class371 {
    public int getSum(int a, int b) {

        while (b != 0) {
            //要在每次a^b之前算出carry,否则carry就不对了
            int carry = (a & b) << 1;

            a = a ^ b;

            //b=carry，在下个循环中，要计算a+carry
            b = carry;
        }

        return a;
    }
}
